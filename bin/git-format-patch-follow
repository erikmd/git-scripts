#!/usr/bin/env bash
set -euo pipefail
# Copyright (c) 2017 Erik Martin-Dorel
#
# Licensed under the MIT license <https://opensource.org/licenses/MIT>
#
ts="Time-stamp: <2017-10-08 14:38:20 emartin>"; ts=${ts#Time-stamp: }

function die_hard() {
    echo -e "$@" >&2
    exit 1
}

function usage() {
    cat >&2 <<EOF
git-format-patch-follow $ts

Facility to export the Git history of given files, including renames.

Usage:
$ git format-patch-follow <options> --follow <path1> [--follow <path2>] ...

Example:
$ git format-patch-follow --stdout --root --follow 1.txt > patch
$ git format-patch-follow --stdout --root --follow 1.txt --follow 2.txt > patch
EOF
}

function main() {
    if [[ $# = 0 ]]; then
        usage
        exit 0
    fi
    local args=()
    local paths=()
    while [[ $# -gt 0 ]]; do
        case "$1" in
            "--")
                die_hard "Error: '-- [filenames]' arguments are not allowed."
                ;;
            "--help")
                usage
                exit 0
                ;;
            "--follow")
                if [[ $# -lt 2 ]]; then
                    die_hard "Error: '--follow' expects one argument."
                else
                    paths+=("$2")
                    shift 2
                fi
                ;;
            *)
                args+=("$1")
                shift
                ;;
        esac
    done
    # ${paths[@]} are the files to follow
    # ${args[@]} is the list of arguments except those bound to --follow
    local path
    local file
    local files=()
    while read -r -d $'\0' file; do
        files+=("$file")
    done < <(for path in "${paths[@]}"; do \
                 git log -z --name-only --format="format:" --follow "$path"; \
             done | tr -s '\0' | sort -u -z)
    # ${files[@]} is the list of files to consider in the history export
    git format-patch "${args[@]}" -- "${files[@]}"
}

main "$@"
